# Uncomment to trust self signed certificates if they are presented by the Kubernetes API server
quarkus.kubernetes-client.trust-certs=true

camel.main.source-location-enabled=true
quarkus.native.resources.includes=camel/stream.xml
camel.main.routes-include-pattern=camel/stream.xml

# Necessary for streaming
camel.main.streamCachingEnabled=false

# quarkus.http.limits.max-body-size=-1
quarkus.http.limits.max-body-size=

# Streaming only works with servlet
quarkus.camel.servlet.url-patterns=/*

# S3 connectivity
camel.component.aws2-s3.accessKey=${S3_ACCESS_KEY}
camel.component.aws2-s3.secretKey=${S3_SECRET_KEY}
camel.component.aws2-s3.region=us-east-1
# %dev.camel.component.aws2-s3.uriEndpointOverride=https://YOUR_MINIO_ROUTE
camel.component.aws2-s3.uriEndpointOverride=http://s3.openshift-storage.svc:80
camel.component.aws2-s3.overrideEndpoint=true
camel.component.aws2-s3.useDefaultCredentialsProvider=false
camel.component.aws2-s3.forcePathStyle=true


# Ensure Quarkus DevServices for Kafka is disabled
quarkus.kafka.devservices.enabled=false

# Kafka connectivity
camel.component.kafka.brokers=my-cluster-kafka-bootstrap:9092
%dev.camel.component.kafka.brokers=my-cluster-kafka-listener1-bootstrap-central.apps.cluster-sfzlt.sandbox2256.opentlc.com:443
%dev.camel.component.kafka.securityProtocol=SSL
%dev.camel.component.kafka.sslTruststoreLocation=tls/truststore.jks
%dev.camel.component.kafka.sslTruststorePassword=password



# quarkus.log.level=ALL
