---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.openshift.io/vcs-url: <<unknown>>
  labels:
    app.kubernetes.io/name: manager
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: quarkus
    app.openshift.io/runtime: quarkus
  name: manager
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: manager
    app.kubernetes.io/version: 1.0.0
  type: ClusterIP
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    app.openshift.io/vcs-url: <<unknown>>
    app.quarkus.io/build-timestamp: 2024-03-24 - 21:15:58 +0000
    app.openshift.io/connects-to: minio
    
  labels:
    app.kubernetes.io/name: manager
    app.kubernetes.io/version: 1.0.0
    app.kubernetes.io/managed-by: quarkus
    app.openshift.io/runtime: camel
  name: manager
spec:
  replicas: 1
  selector:
    app.kubernetes.io/name: manager
    app.kubernetes.io/version: 1.0.0
  template:
    metadata:
      annotations:
        app.openshift.io/vcs-url: <<unknown>>
        app.quarkus.io/build-timestamp: 2024-03-24 - 21:15:58 +0000
      labels:
        app.kubernetes.io/managed-by: quarkus
        app.openshift.io/runtime: quarkus
        app.kubernetes.io/name: manager
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
        - env:
            - name: S3_ACCESS_KEY
              value: {{ aws_s3_credentials.AWS_ACCESS_KEY_ID | b64decode }}
            - name: S3_SECRET_KEY
              value: {{ aws_s3_credentials.AWS_SECRET_ACCESS_KEY | b64decode }}
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: JAVA_APP_JAR
              value: /deployments/quarkus-run.jar
          # image: quay.io/bmesegue/testmanager:1.0.0
          image: quay.io/redhatintegration/sp-ai-camel-manager:1.0.0
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: manager
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/started
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
